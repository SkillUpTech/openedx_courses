{"start":[380,3880,6260,9650,13955,19275,21770,24050,26730,28595,31978,36100,39070,41075,43420,45520,47635,49795,51250,53110,56140,58960,63835,65955,67780,70090,72610,77220,80530,83500,85720,89498,91975,95275,98570,104540,109100,112370,117305,121640,124787,126320,127895,130760,132610,136130,137855,140435,143195,145430,148350,152420,156170,157400,160900,163250,165920,167420,169190,172890,176100,179475,181340,183950,186530,188660,191720,197015,203780,206180,209480,211820,216301,218330,221980,223975,226400,228380,234250,238515,241100,244170,249040,251190,254580,260390,262220,264050,267800,268925,272120,274460,277910,278990,281005,288755,291530,293320,294965,298650,304435,308455,314050,316375,320500,322150,323689,325710,327505,331465,333250,338440,340840,342250,348145,351347,359355,362215,364990,368815,371013,372520,374200,378020,379810,381760,385265,387700,389450,392300,395350,397980,401230,403330,405648,407686,410005,412170,415086,423325,425505,428100,430425,433040,435780,437590,440020,442439],"end":[3880,6260,9650,13955,19275,21770,24050,26730,28595,31978,36100,39070,41075,43420,45520,47635,49795,51250,53110,56140,58960,63835,65955,67780,70090,72610,77220,80530,83500,85720,89498,91975,95275,98570,104540,109100,112370,117305,121640,124787,126320,127895,130760,132610,136130,137855,140435,143195,145430,148350,152420,156170,157400,160900,163250,165920,167420,169190,172890,176100,179475,181340,183950,186530,188660,191720,197015,203780,206180,209480,211820,216301,218330,221980,223975,226400,228380,233040,238515,241100,244170,249040,251190,254580,260390,262220,264050,267800,268925,272120,274460,277910,278990,281005,288755,291530,293320,294965,298650,304435,308455,314050,316375,320500,322150,323689,325710,327505,331465,333250,338440,340840,342250,348145,351347,359355,362215,364990,368815,371013,372520,374200,378020,379810,381760,385265,387700,389450,392300,395350,397980,401230,403330,405648,407686,410005,412170,415086,423325,425505,428100,430425,433040,435780,437590,440020,442439,445250],"text":["In this video, let's take a look at how we can add","an address search index on top of","our existing Azure Cosmos DB dataset.","And this address search index can be leveraged to do","a full text search on top of our Cosmos DB dataset.","So let's start with the Azure portal,","and what we've done is I've navigated to","an existing Azure Cosmos DB account.","And on the left hand navigation,","what you'll see here is Add Azure Search.","Let's open up a new UI in which you're going to","either set up a new Azure Search service","or you can pick an existing one.","You're going to define a data source","which will be a pointer to which","container within the Azure Cosmos DB","account you want to index,","as well as what data within","that container you want to index.","You're going to define a search index that will","be persisted within the Azure Search service,","and this is what will power the search queries,","and you'll create an indexer.","You can think of this as a crawler,","in which it will crawl the data source","at a regularly scheduled interval,","to refresh the index in the Azure Search service.","So first let's picked up a Azure Search service,","you can either create a new one or in this case,","I have an existing one that I will reuse.","Where the data source,","the Azure Search is going to connect to","Cosmos DB using the DocumentDB API.","I'm going to name my index saying this is","my full text search index,","and it's going to connect to","this Cosmos DB account","using this source database and this source collection,","and here, I can supply a query.","The query by default can use a high watermark policy,","and what this allows you to do","is it's a mechanism for getting","incremental updates from the data source","to refresh the index.","You can think of this as every record already","persisted in Cosmos DB has","a time stamp of when it was last modified.","So for the first time when it runs the index,","it'll try to catch up everything","from the beginning to the current time.","And let's say it catches up to January 1,","and tomorrow, on January 2,","rather than sweeping through","the entire Cosmos DB container again,","what they can do is they can look at","the time stamp attribute for the records and","filter for only records that have","been modified since January 1","or when the search indexer last run.","So again, incremental view of the database,","and then on January 3 when it kicks in again,","what we'll do is it'll look at","a new high watermark which is","the January 2 and only look for","incremental records added or","modified since that time again.","So once we've defined our data source, I click OK,","and what will happen","here is it's going to sample using","the query that I have supplied for that data source,","and it's going to ask me for an index names,","so here I chose to index my games database.","So what I want to do here is maybe be able to","search off of my game data.","I have a bunch of player data in which","maybe I want to search for players based","off of some fuzzy text search on","top of the class in my RPG.","So let's create a index,","and on here, what I can do is I can say,","I want to be able to retrieve the idea of the record","and I want to be able to filter based off of the class,","also I want to able to sort off of it,","and I want to be able to do full text searches off of it.","On top of this, since I'm adding a full text search index","rather than just using a","Lucene indexer which will stem and","max the text that is in the class,","I can actually leverage","Microsoft Natural Language Processing stack and","the libraries that have already been built over","the years through Microsoft Office,","through being in through all of","this knowledge that has been acquired.","I can index this data using an OPi stack,","and if I define as English, well,","this will allow me to do is","they can use an English dictionary","to define things like past versus present tense,","they can also find things like singular versus plural.","I can also add a suggester.","So if I wanted to suggest things in a search box,","I can use this to build","a suggester using different suggester modes.","But let's click OK,","I've defined my index,","and now let's define the indexer.","This is going to define the schedule in","which I can refresh","data from my data source to","continuously refresh the index.","So you can think of this as a scheduled crawler,","and I can have this run,","let's say every 60 minutes starting September 1.","I can also have a track deletions,","and one thing to note is because we're querying data,","if you do hard deletes in the data source,","the absence of data does not","tell the address search index hey,","this record has been deleted.","So what you want to do is you want to","do soft deletes and define","a soft delete policy for tracking those deletions.","And if you want to then actually","clean that data up from the data source,","what you can do is first do a soft delete and set","a time to leave or a data retention policy","on that particular record,","and once you set a retention policy of","let's say a couple of days,","it will be pruned out and hard deleted,","so you can think of this as a tombstone record.","There's also a number of advance options","in terms of how do you handle failures,","what kind of batching you want to do","that you can also configure,","and once you click OK,","what will happen is","the data source will be defined and registered,","the index will be registered,","and the indexer will automatically start","consuming data from the data source","and pumping it into the index.","So this gives you a pretty nice walkthrough","of how do you get started with","Azure Search and define","an index on top of Azure Cosmos DB.","Thank you for watching."]}