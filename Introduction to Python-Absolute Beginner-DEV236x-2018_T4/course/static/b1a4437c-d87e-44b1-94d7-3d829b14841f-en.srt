0
00:00:04,201 --> 00:00:08,610
While loops can be controlled with Boolean comparison operators so

1
00:00:08,611 --> 00:00:11,545
that we can stop the loop when a match is made or

2
00:00:11,546 --> 00:00:14,670
a number goes over a certain value.

3
00:00:14,671 --> 00:00:17,862
Let's review our comparison operator so we can use them in a while loop.

4
00:00:17,863 --> 00:00:21,147
We have < and >.

5
00:00:21,148 --> 00:00:24,975
We have >= and <=.

6
00:00:26,910 --> 00:00:29,542
==, !=.

7
00:00:29,543 --> 00:00:31,900
In our first example,

8
00:00:31,901 --> 00:00:37,741
we'll run a while loop while a value is greater than 0.

9
00:00:39,790 --> 00:00:44,021
We start with a greet_count = 5 and it will print out that number.

10
00:00:44,022 --> 00:00:47,439
Then it will decrement that by one.

11
00:00:47,440 --> 00:00:51,797
So it will decrease it by one each time it runs through the loop,

12
00:00:51,798 --> 00:00:54,610
until it is no longer greater than zero.

13
00:00:56,913 --> 00:00:57,456
Let's run the code.

14
00:00:59,921 --> 00:01:04,405
So we see it started with 5 and prints all the way til one.

15
00:01:04,406 --> 00:01:09,482
When it gets to 1, then we see that one minus one will be 0,

16
00:01:09,483 --> 00:01:12,643
and it's no longer greater than 0.

17
00:01:12,644 --> 00:01:17,247
And the loop exits to this point outside of the indentation, and

18
00:01:17,248 --> 00:01:18,450
runs ignition.

19
00:01:22,275 --> 00:01:24,417
In our final example,

20
00:01:24,418 --> 00:01:29,732
we run a while loop checking if the seat_count <= 4.

21
00:01:31,687 --> 00:01:35,503
Here, we see that there's a print statement and

22
00:01:35,504 --> 00:01:40,530
an increment of the seat_count value as we go through the loop,

23
00:01:40,531 --> 00:01:44,110
starting with the seat_count to find at 0.

24
00:01:44,111 --> 00:01:44,780
Let's run the code.

25
00:01:46,600 --> 00:01:50,465
Here we see the increment running and

26
00:01:50,466 --> 00:01:56,840
this comparison operator, when it hits 4, the loop ends.

27
00:01:56,841 --> 00:02:02,242
Code ends up outside of the indentation and that is the code.

28
00:02:06,392 --> 00:02:10,819
We can control the looping of a while statement by using Boolean

29
00:02:10,820 --> 00:02:12,580
comparison operators.

