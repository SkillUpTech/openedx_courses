{
  "start": [
    3368, 
    6440, 
    10606, 
    14221, 
    21010, 
    25379, 
    31445, 
    36391, 
    43770, 
    46138, 
    51221, 
    55831, 
    61541, 
    64531, 
    65458, 
    72790, 
    77101, 
    81842, 
    83521, 
    87811, 
    90691, 
    93131, 
    95871, 
    97495, 
    111200, 
    115592, 
    117631, 
    121181, 
    124484, 
    129086, 
    132871, 
    135965, 
    140215, 
    144563, 
    146288, 
    151931, 
    157086, 
    159626, 
    164135, 
    167206
  ], 
  "end": [
    6439, 
    10605, 
    11105, 
    21009, 
    25378, 
    31444, 
    36390, 
    42054, 
    46137, 
    51220, 
    55830, 
    61540, 
    64530, 
    65457, 
    68986, 
    77100, 
    81841, 
    83520, 
    87810, 
    90690, 
    93130, 
    95870, 
    97494, 
    104388, 
    112653, 
    117630, 
    121180, 
    124483, 
    129085, 
    132870, 
    135964, 
    136932, 
    144562, 
    146287, 
    151930, 
    157085, 
    159625, 
    162745, 
    167205, 
    168385
  ], 
  "text": [
    "The addition operator, when used with variables,", 
    "is powerful because we can update and initialize new variables.", 
    "Let's take a look.", 
    "So, I'm going to assign add_two the sum of the two integers,", 
    "and we can run that and print the result.", 
    "And we can see 34+16 is 50, and we can change numbers or", 
    "add additional integers, and that still runs.", 
    "And so now I have a variable, add_two, which contains the sum, 70.", 
    "I can also use the string concatenation.", 
    "And I can have a first name in a variable as Alton.", 
    "And then I could have a new variable, greeting, which uses this", 
    "variable, Alton, and with a literal string, Happy Birthday.", 
    "So let's see what the print(greeting) looks like.", 
    "And that worked well.", 
    "So it's just the same as if in this spot I just put in Alton.", 
    "And then I can further build on that variable.", 
    "So, greeting, which was created by combining first_name and", 
    "this literal string.", 
    "And then I can add another literal string to that.", 
    "And I can say, here'ss the greeting_today, and I say,", 
    "today is the day, on to the end of that, and", 
    "we can run that and print that string.", 
    "Happy Birthday Alton, today is the day!", 
    "If I go back And I change to the first_name.", 
    "Now it's a Happy Birthday Colette.", 
    "And today is the day.", 
    "So, variables help us reuse the code.", 
    "And we can use the string concatenation", 
    "to build sentences that will be used in our programs and", 
    "inject the different variables in there.", 
    "So we had all these different opportunities to update", 
    "the variables.", 
    "Here's another example going back to the first, where we had add_two and", 
    "we saw 34 and 16 was 50.", 
    "And then I'm gonna reuse the add_two and combine it to itself and", 
    "assign that to add_four, so lets look at that.", 
    "Swell, so, again, this is an example,", 
    "same as the above with the strings but now with the integers.", 
    "Use the addition operator to initialize and", 
    "update your variables."
  ]
}