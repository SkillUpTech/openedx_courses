{
  "start": [
    5331, 
    10081, 
    13081, 
    16051, 
    19039, 
    23279, 
    26808, 
    27741, 
    32661, 
    39161, 
    44511, 
    48711, 
    53071, 
    56181, 
    58226, 
    64708, 
    68161, 
    70291, 
    72891, 
    78561, 
    80201, 
    82921, 
    86411, 
    90451, 
    97280, 
    102287, 
    107611, 
    112500, 
    117174, 
    120616, 
    125361, 
    130479, 
    136391, 
    140261, 
    144561, 
    147021, 
    153011, 
    154831, 
    158610, 
    163280, 
    167636, 
    170131, 
    174868, 
    180521, 
    183621, 
    188661, 
    190941, 
    195081, 
    205672, 
    209814, 
    213701, 
    220781, 
    225890, 
    230271, 
    233271, 
    237281, 
    240520
  ], 
  "end": [
    10080, 
    13080, 
    16050, 
    19038, 
    21037, 
    26807, 
    27740, 
    32660, 
    39160, 
    44510, 
    48710, 
    53070, 
    56180, 
    58225, 
    62926, 
    68160, 
    70290, 
    72890, 
    78560, 
    80200, 
    82920, 
    86410, 
    90450, 
    94410, 
    102286, 
    107610, 
    112499, 
    117173, 
    120615, 
    125360, 
    130478, 
    136390, 
    140260, 
    144560, 
    147020, 
    153010, 
    154830, 
    156820, 
    161530, 
    165728, 
    170130, 
    174867, 
    180520, 
    183620, 
    188660, 
    190940, 
    195080, 
    198824, 
    207112, 
    213700, 
    220780, 
    224740, 
    230270, 
    233270, 
    237280, 
    239380, 
    242070
  ], 
  "text": [
    "Two common types of errors are the syntax error and the name error.", 
    "The syntax error is kind of the grammar of Python.", 
    "If you don't follow the proper rules, you are gonna get an error.", 
    "The name error is all about not being able to", 
    "find that name in a program.", 
    "The first error we're gonna look at is the syntax error that we saw", 
    "before.", 
    "And that is the one with strings not having matching quotes.", 
    "So if I go ahead and put in a unmatching string quote.", 
    "So here I have a double quote and then single quote If I run that,", 
    "I get this no end of line while looking for", 
    "the string message and what that means is Python is searching and", 
    "searching for this double quote and it can't find it.", 
    "And so that causes an error so", 
    "we have to put that back to double quotes and that works properly.", 
    "Another type of syntax error is with variable names.", 
    "And variable names can't start with numbers.", 
    "They can start with an underscore or a letter.", 
    "And so you can actually see here that the number is showing up", 
    "in a different color, so", 
    "Python's giving us a hint that something was wrong there.", 
    "But if you try to run that it says, it's an invalid syntax.", 
    "You just can't use that for a variable name.", 
    "So you could delete that and that would be able to run.", 
    "Or we can put in the student name or- And", 
    "then that's a valid Python variable assignment.", 
    "Here you can see again as I highlight in the cell that", 
    "the Second parenthesis is facing the wrong way.", 
    "And so again I'm gonna get a syntax error and", 
    "it's not knowing it's saying that this is ended the file but", 
    "it doesn't know why it's unexpected and so if we flip that around", 
    "then we can see that that type is a float and that runs properly.", 
    "Another set of errors is the name errors.", 
    "What that means is Python is going to look for something and", 
    "it can't find it anywhere because it doesn't exist.", 
    "In this case print is with a capitalized P.", 
    "And so I get this NameError.", 
    "And so it tells you", 
    "right here that if it's capitalized it's not defined.", 
    "So all we have to do is spell it right,", 
    "With the proper capitalization and", 
    "then that works in It is common to make these typos where you are going", 
    "to capitalize a start of a sentence, or that you will reverse letters.", 
    "You can look for that if you see a NameError.", 
    "Another way the NameError can happen is if we have not defined something.", 
    "So 'day_of_week' I am trying to print it, but", 
    "nowhere did I define \"day_of_week\", and so it says it cannot be found.", 
    "So the way to correct that is to define the variable.", 
    "So then we can run that.", 
    "Syntax errors are caused when we're not following the rules of Python.", 
    "So if we're missing parentheses or quotes are not matching or", 
    "you are just using things in the wrong order will get a syntax error.", 
    "Name error is when python can not find something, and so it could be.", 
    "Because by the fact you haven't initialized the code yet", 
    "maybe it 's further down in the code or you type the name of the code", 
    "improperly and so Python can find it.", 
    "Good luck TroubleShooting your errors."
  ]
}