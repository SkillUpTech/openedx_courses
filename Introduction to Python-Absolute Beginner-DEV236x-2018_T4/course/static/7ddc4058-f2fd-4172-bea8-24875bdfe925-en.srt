0
00:00:00,226 --> 00:00:02,110
OK! Now we're going to train a

1
00:00:02,177 --> 00:00:05,088
single predict with a single mini batch of data.

2
00:00:05,155 --> 00:00:08,666
So, we will create a reader, pass in our test file

3
00:00:08,777 --> 00:00:09,911
and false again because

4
00:00:10,000 --> 00:00:12,590
we're no longer training and our two--

5
00:00:12,666 --> 00:00:17,822
input parameters as before, and our set mini batch size to 25.

6
00:00:17,933 --> 00:00:22,333
We'll create a map and then we're going to call

7
00:00:22,422 --> 00:00:26,600
the reader, next mini batch to get our 25 samples using the map

8
00:00:26,711 --> 00:00:30,800
and then we'll get out our data, directly as an array.

9
00:00:30,888 --> 00:00:34,820
So, we'll take our data sub-label and our

10
00:00:34,911 --> 00:00:37,500
data sub input and put them into

11
00:00:37,600 --> 00:00:40,044
a variable called image label and image data,

12
00:00:40,130 --> 00:00:41,880
and then here we're going to use

13
00:00:41,973 --> 00:00:44,920
entry case eval function, but that lets us

14
00:00:45,013 --> 00:00:48,880
do is take any node in our computational graph, and evaluate it

15
00:00:48,977 --> 00:00:54,022
at that point. So, if you remember from up here, we created

16
00:00:54,111 --> 00:00:57,377
a softmax function on the end of our model.

17
00:00:57,466 --> 00:01:00,800
So, by call out--, that's called out. So by calling outside eval,

18
00:01:00,911 --> 00:01:03,600
we'll get out the softmax probabilities

19
00:01:03,755 --> 00:01:06,266
for these 25 images,

20
00:01:07,688 --> 00:01:10,311
and what we're going to do here is,

21
00:01:10,400 --> 00:01:16,200
we're going to iterate from 1 to range of the len of the image data.

22
00:01:16,311 --> 00:01:21,355
So I'll be 25 and so it'll go 0 to 24, we'll get out

23
00:01:21,422 --> 00:01:25,222
all samples here and we'll evaluate each of them one at a time,

24
00:01:25,288 --> 00:01:28,177
and we'll stick all the probabilities into an array called

25
00:01:28,266 --> 00:01:30,688
predicted label probability.

26
00:01:31,333 --> 00:01:34,622
Then we're going to go through and find the Arg max,

27
00:01:34,688 --> 00:01:38,222
that is the index, whose entry is highest

28
00:01:38,311 --> 00:01:41,955
in our predicted label as well as our image label

29
00:01:42,044 --> 00:01:44,430
that was given to us as

30
00:01:44,555 --> 00:01:47,420
in the test data set and we're going to

31
00:01:47,533 --> 00:01:50,000
compare those, will first print out the

32
00:01:50,111 --> 00:01:52,511
two of them labeled and predicted,

33
00:01:52,577 --> 00:01:57,044
and we'll print out the whole array of 25 here,

34
00:01:57,111 --> 00:02:00,288
and so the top label here-- the top row

35
00:02:00,350 --> 00:02:03,933
is the actual labels and the bottom rows

36
00:02:04,022 --> 00:02:05,755
are our predictions. So let's see how

37
00:02:05,800 --> 00:02:09,466
we did. 6, 7, this list entry is wrong,

38
00:02:09,550 --> 00:02:12,711
this entry is wrong, right, right, right, right, right, wrong, OK.

39
00:02:12,777 --> 00:02:14,620
So it's a mixture of right/wrong.

40
00:02:14,711 --> 00:02:17,777
Let's try and visualize one of the images

41
00:02:17,844 --> 00:02:20,822
and its label, so we'll pick sample number 5,

42
00:02:20,933 --> 00:02:26,920
and we will use matplotlib, to image show to plot that

43
00:02:27,044 --> 00:02:30,000
from my image data sample number,

44
00:02:30,111 --> 00:02:34,022
reshape is 28 by 28 again and use a gray map,

45
00:02:34,088 --> 00:02:38,110
and then we'll print out a

46
00:02:38,244 --> 00:02:45,800
the actual predicted label from a gt label sample number,

47
00:02:45,911 --> 00:02:50,020
and it's actually coming from prediction sample number,

48
00:02:50,111 --> 00:02:53,377
and long behold it looks like a 9

49
00:02:53,488 --> 00:02:55,850
and we predicted an 8. So, that's OK.

50
00:02:55,955 --> 00:02:57,760
That we know our model isn't perfect yet,

51
00:02:57,866 --> 00:03:03,200
but that's sort of a way of checking and making sure that things work

52
00:03:03,288 --> 00:03:05,666
like we expect they would at the detail level

53
00:03:05,755 --> 00:03:09,266
and that's also an example of--

54
00:03:09,333 --> 00:03:15,288
the kind of code we would need to do predictions in a deployed model.

55
00:03:15,377 --> 00:03:19,822
OK, so that's it for our coverage of the notebook.

56
00:03:19,970 --> 00:03:21,650
It's time for you now to go to the notebook

57
00:03:21,777 --> 00:03:26,555
yourself, open it up, run it, try changing some things,

58
00:03:26,622 --> 00:03:28,111
try printing out some values,

59
00:03:28,200 --> 00:03:30,088
intermediate values and make sure

60
00:03:30,177 --> 00:03:34,400
you understand what's going on and I also suggest that

61
00:03:34,488 --> 00:03:35,440
you try some of the

62
00:03:35,533 --> 00:03:38,222
suggested exercises listed at the bottom

63
00:03:38,311 --> 00:03:41,333
or maybe there's some throughout the notebook.

64
00:03:41,400 --> 00:03:42,720
Thanks!

