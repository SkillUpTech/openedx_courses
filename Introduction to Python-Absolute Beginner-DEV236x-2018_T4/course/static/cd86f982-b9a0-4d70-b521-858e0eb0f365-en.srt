0
00:00:03,749 --> 00:00:08,236
Incrementing a variable is a common task that we do inside of a loop,

1
00:00:08,237 --> 00:00:12,250
where we wanna count each time a loop executes.

2
00:00:12,251 --> 00:00:16,440
To use a counting variable in a loop where we want to increment by 1,

3
00:00:16,441 --> 00:00:19,440
we can use the following code.

4
00:00:19,441 --> 00:00:22,813
The variable votes is set equal to itself + 1.

5
00:00:22,814 --> 00:00:29,820
Each time this code runs, the votes tally is increased by 1.

6
00:00:29,821 --> 00:00:32,384
Shorthand uses this format.

7
00:00:32,385 --> 00:00:39,494
votes += 1, which means votes equals itself + 1.

8
00:00:40,600 --> 00:00:44,740
Let's run some code, where we set votes = 3.

9
00:00:44,741 --> 00:00:48,310
And then we want to increment it by 1,

10
00:00:48,311 --> 00:00:52,290
using the votes = votes + 1 method.

11
00:00:52,291 --> 00:00:54,770
And then the shorthand, we're gonna increment it by 2.

12
00:00:58,031 --> 00:01:02,984
When the code runs, we see that the votes tally increased from 3

13
00:01:02,985 --> 00:01:05,100
to 4 and then 2 more to 6.

14
00:01:06,870 --> 00:01:08,100
We can run the code again.

15
00:01:10,320 --> 00:01:13,404
Now it moved from 6 to 7 and then 2 more to 9.

16
00:01:18,629 --> 00:01:22,180
To decrement, we use the same format.

17
00:01:22,181 --> 00:01:27,250
Votes equals itself but now we decrease by 1, we subtract.

18
00:01:28,400 --> 00:01:32,105
The shorthand uses the votes -=1.

19
00:01:33,320 --> 00:01:35,702
Votes equals itself- 1.

20
00:01:35,703 --> 00:01:41,635
Let's print out the current value of votes and decrement by 1.

21
00:01:44,728 --> 00:01:45,665
We can run the code again.

22
00:01:49,731 --> 00:01:52,945
Decrement will decrease the value and in this case,

23
00:01:52,946 --> 00:01:54,414
we can count down by 1.

24
00:01:56,593 --> 00:02:00,890
Here, we're going to keep count of the available seats.

25
00:02:00,891 --> 00:02:05,385
We start with 0, then we run a while True loop and we count and

26
00:02:05,386 --> 00:02:09,451
add 1 seat each time seat_count equals itself + 1.

27
00:02:12,020 --> 00:02:15,067
If the seat_count is equal to, or greater than 4,

28
00:02:15,068 --> 00:02:17,640
then we say we're out of seats.

29
00:02:17,641 --> 00:02:18,560
Let's run the code.

30
00:02:20,710 --> 00:02:24,032
Here we see the count incrementing 1, 2, 3, 4, and

31
00:02:24,033 --> 00:02:25,777
then breaking from the loop.

32
00:02:29,144 --> 00:02:33,200
Another use of a while True loop is counting with a decrement.

33
00:02:33,201 --> 00:02:36,040
We start with 4 seats available.

34
00:02:36,041 --> 00:02:41,490
And then we count as each seat is filled, decrementing by 1.

35
00:02:41,491 --> 00:02:43,924
So, seat count equals itself- 1.

36
00:02:43,925 --> 00:02:48,598
When the seat count is equal to or less than zero,

37
00:02:48,599 --> 00:02:53,870
then we say we are out of seats and our final count is 0.

38
00:02:53,871 --> 00:02:54,740
Let's run the code.

39
00:02:56,320 --> 00:02:57,610
So we start with 4 and

40
00:02:57,611 --> 00:03:00,779
then we decrement until we have 0 seats available.

41
00:03:03,806 --> 00:03:07,361
A variable can be incremented or

42
00:03:07,362 --> 00:03:13,292
decremented by setting it equal to itself + or- 1.

