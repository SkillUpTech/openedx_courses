{
  "start": [
    3880, 
    7800, 
    11010, 
    13140, 
    15010, 
    17530, 
    23980, 
    27190, 
    29410, 
    37810, 
    42520, 
    46020, 
    48090, 
    51160, 
    53160, 
    55660, 
    58300, 
    61780, 
    64120, 
    65230, 
    68740, 
    71560, 
    74320, 
    76950, 
    80590, 
    85540, 
    88240, 
    92470, 
    94480, 
    96670, 
    99070, 
    101950, 
    105880, 
    108310, 
    113470, 
    117070, 
    121490, 
    123970, 
    130150, 
    132850, 
    136840, 
    138650, 
    140930, 
    145270, 
    148660, 
    151720, 
    155360, 
    159770, 
    163000, 
    166270
  ], 
  "end": [
    7759, 
    10969, 
    13099, 
    14960, 
    17480, 
    23930, 
    27134, 
    29350, 
    37760, 
    42470, 
    45979, 
    48049, 
    51110, 
    53119, 
    55610, 
    58244, 
    61720, 
    64070, 
    65180, 
    68690, 
    71510, 
    74270, 
    76894, 
    80540, 
    85490, 
    88190, 
    92420, 
    94430, 
    96620, 
    99020, 
    101900, 
    105830, 
    108260, 
    113420, 
    117020, 
    121430, 
    123920, 
    130100, 
    132800, 
    136790, 
    138607, 
    140649, 
    145220, 
    148610, 
    151670, 
    155310, 
    159698, 
    162950, 
    166220, 
    172300
  ], 
  "text": [
    "We saw how starts with can help us, find", 
    "a search of the first character and a", 
    "string. But sometimes we want to search", 
    "in the middle of the string and so the", 
    "Boolean_in_keyword is very useful in", 
    "this regard. So below, I have a string", 
    "called menu and I just entered a number", 
    "of things that might be in a menu in that", 
    "string and then I just can print and to  the result here of to see, If pizza is", 
    "in menu and so, what this will do with", 
    "the in keyword is, Pizza it's gonna be the", 
    "search string and they're gonna run", 
    "it through this entire list to see if it", 
    "gets a match and So the way that our", 
    "work is at each letter, it will just", 
    "check if there is a P and then when it's", 
    "there it will see the second letter and soon and that doesn't work then we'll", 
    "move on to it gets to the start again", 
    "with another piece.", 
    "So we can run this and it says False, but", 
    "I see that right here there's pizza in", 
    "the menu but it wasn't found so the", 
    "problem in this case is that, I need to", 
    "have pizza be lowercase and so, I can run", 
    "it with a lowercase p and then I see", 
    "that it's true and so this is really a", 
    "great part of Python here is this the", 
    "way that it works to just use this word", 
    "and it seems very natural to look for", 
    "something like this because, I named my", 
    "variable menu and my search term was", 
    "quite straightforward, I could just run", 
    "this really easily and I couldn't use a", 
    "variable in this case as well. So let's", 
    "look over here at another version of", 
    "pizza. In this case, I put lower and lower", 
    "and this is really a best practice that", 
    "you should look for in any  of you search, if you don't care", 
    "about case sensitivity, then it's a good", 
    "practice to make lower used in both", 
    "sides and we can see how that makes", 
    "search run a lot faster .", 
    "The \"in\" keyword is very effective in searching within", 
    "strings and so the best practice we use", 
    "with that is when case sensitivity is", 
    "not important , we can use a dot lower", 
    "and use that string method to make both the", 
    "search string and search target a", 
    "lowercase . And that will lead to really", 
    "effective searching."
  ]
}