0
00:00:03,054 --> 00:00:05,160
Lets talk about integers.

1
00:00:05,161 --> 00:00:07,060
Integers are a data type.

2
00:00:07,061 --> 00:00:09,670
They are a type of information that is numbers and

3
00:00:09,671 --> 00:00:12,670
we use these just like we do in normal mathematics.

4
00:00:12,671 --> 00:00:17,910
So the counting numbers, positive or negative, zero included,

5
00:00:17,911 --> 00:00:21,950
and let's contrast those to the strings we just learned about.

6
00:00:21,951 --> 00:00:26,970
Strings are characters which include the A through Z characters and

7
00:00:26,971 --> 00:00:28,790
digits zero through nine.

8
00:00:28,791 --> 00:00:33,430
But the difference is a string is just a representation of a picture

9
00:00:33,431 --> 00:00:34,220
of that number.

10
00:00:34,221 --> 00:00:38,830
It's the representation of the shape of the number three,

11
00:00:38,831 --> 00:00:42,490
versus the actual integer number three as something that we can do

12
00:00:42,491 --> 00:00:44,750
mathematical operations with.

13
00:00:44,751 --> 00:00:48,040
And so the difference between the two is quotes and not quotes.

14
00:00:49,500 --> 00:00:52,630
So we see that the string

15
00:00:54,590 --> 00:01:00,530
number representation here, this would be the same as -123, but

16
00:01:00,531 --> 00:01:06,670
it's a negative character and then the 1 and 2 and 3 digit characters.

17
00:01:06,671 --> 00:01:11,704
And so we can echo that to the screen and we see the -123.

18
00:01:12,720 --> 00:01:17,320
And a integer has no quotes, and we can echo that as well.

19
00:01:17,321 --> 00:01:22,415
And notice that the quotes do not echo in the integer right there.

20
00:01:22,416 --> 00:01:27,520
In the print statement, we have a little bit different

21
00:01:27,521 --> 00:01:32,520
behavior for strings and for number integers.

22
00:01:32,521 --> 00:01:36,480
So let's go ahead and print that and we see it prints without the quotes

23
00:01:36,481 --> 00:01:40,070
because that's the behavior of the print statement.

24
00:01:40,071 --> 00:01:44,480
The print statement is also able to decipher numbers,

25
00:01:45,480 --> 00:01:48,999
and in this case an integer number, 2017.

26
00:01:50,530 --> 00:01:52,480
And it can echo it as well.

27
00:01:52,481 --> 00:01:54,862
It can also echo a negative number.

28
00:01:58,701 --> 00:02:01,980
The difference here is the quotes.

29
00:02:01,981 --> 00:02:03,256
This makes it a string.

30
00:02:06,428 --> 00:02:12,330
So I can add a letter in with that because it's a string.

31
00:02:12,331 --> 00:02:17,040
If I put a letter into here, it no longer makes sense to Python and

32
00:02:17,041 --> 00:02:17,860
it causes an error.

33
00:02:20,580 --> 00:02:23,390
Integers are the counting numbers, both positive and negative,

34
00:02:23,391 --> 00:02:25,340
and include zero.

35
00:02:25,341 --> 00:02:27,260
If you put them in quotes, that'd be a string.

36
00:02:27,261 --> 00:02:30,060
So we don't use strings with our integers.

37
00:02:30,061 --> 00:02:32,097
Just put on the number, no quotes.

