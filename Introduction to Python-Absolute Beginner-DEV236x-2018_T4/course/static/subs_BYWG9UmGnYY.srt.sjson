{
  "start": [
    2510, 
    5264, 
    7536, 
    8992, 
    12048, 
    16832, 
    19648, 
    22416, 
    27024, 
    30672, 
    33488, 
    36208, 
    39456, 
    42960, 
    45824, 
    48736, 
    53200, 
    57216, 
    59616, 
    62592, 
    67696, 
    71856, 
    74496, 
    78336, 
    81152, 
    83911, 
    88016, 
    96080, 
    99760, 
    102240, 
    105936, 
    110832, 
    114336, 
    120896, 
    125022, 
    127644, 
    130044, 
    133280
  ], 
  "end": [
    5184, 
    7456, 
    8848, 
    11552, 
    16096, 
    19536, 
    21376, 
    26704, 
    30320, 
    33376, 
    36032, 
    39312, 
    42816, 
    45568, 
    48608, 
    53040, 
    56992, 
    59504, 
    62336, 
    66400, 
    71296, 
    74360, 
    78112, 
    81056, 
    83808, 
    87150, 
    93280, 
    99552, 
    102128, 
    105776, 
    110256, 
    113744, 
    120288, 
    124928, 
    127550, 
    129870, 
    133120, 
    136768
  ], 
  "text": [
    "In order to create functions", 
    "that take arguments like we saw with the print", 
    "and the type function,", 
    "we're going to have to define some parameters.", 
    "Sometimes we're going to need to make functions with multiple parameters.", 
    "To call a function with multiple parameters,", 
    "you need multiple arguments.", 
    "Here we're going to call, make_schedule with two arguments.", 
    "These are strings separated by a comma.", 
    "To define the function, make_schedule", 
    "with two parameters as well", 
    "inside the parentheses of the function definition,", 
    "we separate the function names also with a comma.", 
    "Then when we call that function,", 
    "the first argument, mathematics", 
    "the string will be assigned to the parameter period1.", 
    "And likewise history will be assigned to period2.", 
    "In the body of the function,", 
    "we can do some string concatenation.", 
    "And then we can return that in this variable schedule.", 
    "Below we print out that return value", 
    "with a little label SCHEDULE.", 
    "Let's run the code. Here we see", 
    "that we've added the first period", 
    "and then that first argument mathematics,", 
    "and second period, the second argument history.", 
    "In this example, format_info, we're going to send three parameters.", 
    "So, here we call with the arguments", 
    "a name which is a string,", 
    "and an age which is a number integer", 
    "and a school which is also a string.", 
    "Here the return statement", 
    "is made up of a string concatenation versus a variable as we did above.", 
    "Let's run that code. And here, we can see", 
    "because we use formatting characters,", 
    "that we get a nice output here", 
    "and we can make functions with multiple parameters", 
    "by using the commas to separate the parameter names."
  ]
}