{
  "start": [
    4377, 
    7047, 
    11051, 
    14370, 
    19891, 
    26961, 
    31961, 
    37210, 
    40601, 
    43650, 
    49451, 
    54651, 
    60880, 
    65367, 
    72497, 
    79461, 
    82321, 
    86681, 
    88882, 
    92823, 
    98955, 
    105004, 
    112624, 
    114940, 
    121620, 
    125211, 
    127481, 
    129624, 
    133816, 
    136469, 
    138561, 
    143503, 
    147941, 
    155461, 
    163586, 
    171340, 
    177654, 
    182381, 
    187358, 
    191081, 
    195051, 
    200241, 
    204450, 
    210270, 
    215311, 
    218541, 
    221790, 
    227265, 
    232431, 
    238801, 
    243746
  ], 
  "end": [
    7046, 
    11050, 
    13170, 
    19890, 
    26960, 
    31960, 
    36140, 
    40600, 
    42570, 
    49450, 
    54650, 
    59650, 
    62265, 
    68645, 
    79460, 
    82320, 
    86680, 
    88881, 
    92822, 
    96323, 
    102412, 
    108342, 
    114939, 
    120570, 
    125210, 
    127480, 
    129623, 
    133815, 
    136468, 
    138560, 
    143502, 
    147940, 
    155460, 
    160009, 
    167222, 
    173341, 
    179780, 
    187357, 
    191080, 
    195050, 
    200240, 
    204449, 
    209160, 
    215310, 
    218540, 
    221789, 
    227264, 
    232430, 
    238800, 
    243745, 
    247967
  ], 
  "text": [
    "A while loop can be used with any boolean, but", 
    "it's common to use it with a boolean string test to make sure that our", 
    "input is in the format that we want.", 
    "An example of a format that we might want is just a first name.", 
    "And so in the first example here, we define a variable called student", 
    "fname, standing for first name, and just give it an empty string.", 
    "And then we have a boolean string test in a while loop.", 
    "Here, we're gonna check if the student first name", 
    "is alphabetical characters.", 
    "And if that is false, then we're gonna run the code to get input for", 
    "the name because once it's true then we have a alphabetical", 
    "character name and then we can print it out with this statement below.", 
    "Let's run this code.", 
    "If I put in Alton D,", 
    "That fails, a fail here of this test is equal to false.", 
    "And so the code runs again and gets input.", 
    "The problem here is that a space is not an alphabetical character.", 
    "So we just looking for a first name, and", 
    "although this isn't always true that first name don't have spaces,", 
    "just for the purposes of this task we want to illustrate that.", 
    "So now I can just enter Alton with no spaces.", 
    "Then I get my greeting, Alton has been entered as first name.", 
    "In this second example,", 
    "we have a while loop that wants all of the input in uppercase.", 
    "We just did the same thing we did in the last loop where we", 
    "check if this is false.", 
    "If the message is upper,", 
    "is returned false then we keep going in the loop.", 
    "And the way that we compared it this time is we said,", 
    "it's not equal to true.", 
    "And so the case is when I put in high and lowercase,", 
    "that's false and that is not equal to true.", 
    "So when that happens, then this code below will be run.", 
    "So I'll keep doing the input until I go in uppercase, so let's run that.", 
    "Sorry, I can't hear, please yell a message.", 
    "Can't hear, yell a message.", 
    "So now the message is received.", 
    "Finally, there's an example where we want a number input,", 
    "and we say enter a positive integer.", 
    "This is a case where isdigit works very well.", 
    "Isdigit will return as false if you", 
    "enter a decimal point or a minus sign, and so only number,", 
    "numeric characters can be entered to have this be true.", 
    "As long as is number returns false,", 
    "then it is not true and the code below runs.", 
    "So let's run that code.", 
    "I'm gonna go 3.3, -5,", 
    "and even a number written in text.", 
    "Finally, I'll just put in 34, which is a positive integer.", 
    "We can use while loops to keep running through at input to", 
    "get the proper format that we need for our code."
  ]
}