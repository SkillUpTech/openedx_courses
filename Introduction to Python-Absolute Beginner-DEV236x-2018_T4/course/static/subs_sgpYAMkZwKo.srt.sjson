{
  "start": [
    1550, 
    4500, 
    8830, 
    13590, 
    18400, 
    20140, 
    26820, 
    30760, 
    32480, 
    35657, 
    41680, 
    46500, 
    51308, 
    55490, 
    59550, 
    65300, 
    73670, 
    78490, 
    83930, 
    90780, 
    94720, 
    99688, 
    103577, 
    108719, 
    113456, 
    119677, 
    124548, 
    128910, 
    132610, 
    138710, 
    143420, 
    148425, 
    155405, 
    164106, 
    170399, 
    176135, 
    181315, 
    186700, 
    190180, 
    197180, 
    202080, 
    207160, 
    212890, 
    216490, 
    221480, 
    223250, 
    227990, 
    232516, 
    236922, 
    243966, 
    248809, 
    257319, 
    260890, 
    266170, 
    268415, 
    273304, 
    277827, 
    280894, 
    283611, 
    290440, 
    294470, 
    297660, 
    302680, 
    304240, 
    307360, 
    310970, 
    314470, 
    318770, 
    323730, 
    328580, 
    332131, 
    335690, 
    340620, 
    344641, 
    349450, 
    354881, 
    360640, 
    363070, 
    366470, 
    371841, 
    375833, 
    379433, 
    382039, 
    385390, 
    388742
  ], 
  "end": [
    4500, 
    8830, 
    13590, 
    18400, 
    20140, 
    24140, 
    30760, 
    32480, 
    35657, 
    40620, 
    46500, 
    51308, 
    55490, 
    59550, 
    65300, 
    71945, 
    78490, 
    82830, 
    90780, 
    94720, 
    99688, 
    103577, 
    108719, 
    113456, 
    119677, 
    124548, 
    128910, 
    132610, 
    136490, 
    143420, 
    148425, 
    155405, 
    161478, 
    170399, 
    176135, 
    181315, 
    186700, 
    190180, 
    195710, 
    202080, 
    207160, 
    210915, 
    216490, 
    221480, 
    223250, 
    227990, 
    232516, 
    236922, 
    243966, 
    248809, 
    255372, 
    260890, 
    263275, 
    268415, 
    273304, 
    277827, 
    280894, 
    283611, 
    288090, 
    294470, 
    296480, 
    302680, 
    304240, 
    307360, 
    310970, 
    314470, 
    316960, 
    323730, 
    328580, 
    332131, 
    335690, 
    340620, 
    344641, 
    349450, 
    354881, 
    360640, 
    363070, 
    366470, 
    371841, 
    375833, 
    379433, 
    382039, 
    385390, 
    388742, 
    393670
  ], 
  "text": [
    "So now you know what we are up to.", 
    "We have a model and we want to learn it from the MS data.", 
    "And this model has parameters of weights and biases represented", 
    "by the matrix w, and bias b.", 
    "So, let's dive right into it and", 
    "figure out what are these values and how we can learn from there.", 
    "First of all, we will flatten out the image and", 
    "represent in the form of an array.", 
    "You are already familiar with that, and", 
    "the next thing is to figure out what these matrix elements are.", 
    "So the first thing we do is for each of the input feature values", 
    "here, we pair it up with the corresponding weight,", 
    "single integer value.", 
    "And we generate similar pairings for", 
    "all the 784 pixels that we have, and", 
    "these are going to be 784 values represented by these arrows.", 
    "And this is indicated by a vector of weights,", 
    "of length 784 over here.", 
    "Now this one is going to be tuned for", 
    "detecting the digit 0.", 
    "Now, let's for now pretend that someone has given you", 
    "a magical set of values for these weights.", 
    "Such that when you multiply the weight values", 
    "with their corresponding pixel values,", 
    "if this image was 0, then the output of the this unit,", 
    "which is represented by this dot product,", 
    "is gonna be very high for the input 0.", 
    "When that handwritten digit is 0, you'll get a very high", 
    "value here, and at all other times it will be very, very low.", 
    "So this is my classifier to detect the digit 0.", 
    "I'm gonna repeat this process for digit 1,", 
    "and corresponding to that digit I have another set of weights,", 
    "784 of those, predicting the values for digit 1.", 
    "Similarly, we will repeat this process", 
    "until we have one classifier each for", 
    "the digit 0 to 9, in that case we", 
    "have a set of 10 weight vectors.", 
    "Each of them 784, corresponding to the size of the input vector", 
    "here, and this starts to take the shape of a matrix.", 
    "So, instead of doing a dot product", 
    "with respect to the input for a digit 0 here, and then for", 
    "digit one, 1, then so and so forth all the way to digit 9.", 
    "Modern day computers can do it all in one go,", 
    "very efficiently, using a matrix multiplication operation,", 
    "which is indicated here.", 
    "w is a matrix, and you have the corresponding vector.", 
    "Now if you're wondering why that T shows up,", 
    "there's a bit of math involved, which is,", 
    "because you have 10 x 784 as the dimensions of the weight matrix.", 
    "And you want the vector to be 784 x 1,", 
    "which is mathematically represented as x transpose.", 
    "Now once you've done that, we are missing something here.", 
    "Take a moment, think about it, what are we missing?", 
    "Some of you probably have guessed.", 
    "We need to add the biases, just like we did it for", 
    "our elementary solar panel data that we were", 
    "using in the previous model.", 
    "For each of the digits, 0 to 9,", 
    "we have ten corresponding bias values that get added.", 
    "So now we have ten classifiers,", 
    "one corresponding to each digit here.", 
    "Which emits a high value if the input digit belongs", 
    "to that particular category.", 
    "In other words, if the input digit is 0,", 
    "this unit will activate high.", 
    "If the input digit is 9, the last one will emit a high value,", 
    "and the rest of it will be lower values.", 
    "Now remember how our brain has output", 
    "that have nonlinear responses to input features.", 
    "Similarly, what we do in the case of neural networks, and", 
    "you can all just see that happens in logistic regression.", 
    "That you take some output from these units and", 
    "these units, and you pass it through", 
    "something called an activation function.", 
    "In this case, we use a function called sigmoid,", 
    "which maps any input within a range of 0 to 1.", 
    "So for instance if you have a value of 2,", 
    "it would emit a very high value.", 
    "As opposed to a value of 0, which would emit a value of 0.5.", 
    "And if you go into negative, if the input value's out of this", 
    "accumulator, this unit are coming out to be very low,", 
    "then you would get a output value of 0.", 
    "Here you can see that only one cell,", 
    "which corresponds to the digit 3,", 
    "has high value, rest of them are relatively lower."
  ]
}