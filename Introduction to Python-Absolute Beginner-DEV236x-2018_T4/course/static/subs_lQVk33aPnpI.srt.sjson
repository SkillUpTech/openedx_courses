{
  "start": [
    3880, 
    7800, 
    13050, 
    16390, 
    22750, 
    25050, 
    28900, 
    30760, 
    36600, 
    40370, 
    44170, 
    48630, 
    57700, 
    60850, 
    69050, 
    72530, 
    75530, 
    83830, 
    91210, 
    96530, 
    98650, 
    102510, 
    108400, 
    114090, 
    118050, 
    119970, 
    123220, 
    131570, 
    137910, 
    143190, 
    154970, 
    159170, 
    167450, 
    175450, 
    178570, 
    184850, 
    196460, 
    200770, 
    203310, 
    206550, 
    211280, 
    215710, 
    219640, 
    222510, 
    226550, 
    228280, 
    232020
  ], 
  "end": [
    7760, 
    13000, 
    16340, 
    22700, 
    25000, 
    28860, 
    30710, 
    36560, 
    40320, 
    44120, 
    48590, 
    57650, 
    60800, 
    69000, 
    72480, 
    75480, 
    80760, 
    91160, 
    96480, 
    98480, 
    102460, 
    108350, 
    114040, 
    118000, 
    119920, 
    123170, 
    131520, 
    137860, 
    143140, 
    154920, 
    159120, 
    167400, 
    175400, 
    178480, 
    184800, 
    196300, 
    200640, 
    203200, 
    206420, 
    211080, 
    215600, 
    219520, 
    222380, 
    226480, 
    228180, 
    231910, 
    236130
  ], 
  "text": [
    "When we work with Strings sometimes they're not in the format that we want", 
    "them to be in. And so we can use some test some boolean string method tests", 
    "to figure out, what format the strings are in?", 
    "So let's take a look, so we have several boolean string methods", 
    "that will return a true or false.", 
    "For instance we have this \"Python\" isalpha", 
    "and you just add that method to", 
    "the end of a string or string variable. The name is lowercase isalpha with", 
    "parenthesis and then when we run that we see it's true.", 
    "If I put a space in there, it's still true?", 
    "No, because the space is not a alphabetical character,", 
    "how about if I put a exclamation still false. So, in order to have a isalpha", 
    "pass you need only letters of the alphabet.", 
    "Here I have isalpha numeric or isalnum. And so same thing", 
    "If I run that it's true because it has digits", 
    "and it has alphabetic characters.", 
    "So again if I put a space in there that resolves to False.", 
    "A very useful method is startswith and in startswith you can put in", 
    "a string or a character. And so in this case, I'll see if", 
    "save startswith(\"s\")", 
    "and we expect that is False.", 
    "False because this is case sensitive and so the only way to get truth", 
    "there is to have a exact match and now it is True.", 
    "So startswith can be very useful, here I have", 
    "is \"HEY\" islower", 
    "looks like it's yelling. So that's False.", 
    "So maybe I need to find out if its upper, yes, it is upper indeed.", 
    "Title is something that checks, if every word separated by a", 
    "space in your string is uppercase.", 
    "So that is True but the end is not True and we also said earlier", 
    "we can use a string variable. So here I'm going", 
    "to get the string of digits 176 to be centimeter height and then I'm going to", 
    "see are all of those digits and says yes that's True and if I took the quotes off.", 
    "What would happen? I'll get an error because", 
    "this is not a string and this only runs on strings.", 
    "So, I can also use my string methods inside", 
    "of a comma formatted print statement.", 
    "And so over here I have this centimeter height", 
    "is it a digit and so, then I just asked I said", 
    "is centimeter height and then I show the height is it all digits,", 
    "we can run that and it says 176", 
    "is all digits True. So this is where the True-False evaluates", 
    "and you put that right into a print statement.", 
    "So when we're working with various boolean string methods", 
    "we're able to identify,", 
    "what is inner strings and different elements of our string", 
    "such as what letters it starts with upper, lower and title."
  ]
}