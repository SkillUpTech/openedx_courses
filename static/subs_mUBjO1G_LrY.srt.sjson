{"start":[0,2160,3579,6080,8990,11120,12335,13760,14810,16405,17755,19453,21470,23660,25970,28655,32598,36138,38435,41225,43495,46065,48020,49775,50840,52145,56690,57944,59330,60790,61940,64130,65805,68210,69710,73055,75965,79570,81535,83030,85300,90193,91250,93170,95105,96825,99170,102160,103970,105950,107370,110250,111500,112880,114275,116346,116540,118490,119810,123163,125360,127945,129180,131450,134000,135530,137930,140103,142250,143420,144780,145020,147255,149090,151220,155150,157200,158030,159800,161645,163520,165790,168110,170150,171350,172855,174730,179265,181495,183226,185210,186020,188010,190520,192140,194836,196230,196460,198800,201040,202310,205670,209581,211400,214170,216545,219911,221598,223805,225650,227680,231215,232580,234520,237595,239875,241550,244430,246325,248020,249714,251970,253760,255605,257840,260235,261950,264650,265985,267250,269030,270860,273340,276500,278300,280850,282445,284683,287510,290347,291800,293270,295250,297134,299385,301519,303520],"end":[2160,3579,6080,8990,11120,12335,13760,14810,16405,17755,19453,21470,23660,25970,28655,32598,36138,38435,41225,43495,46065,48020,49775,50840,52145,56690,57944,59330,60790,61940,64130,65805,68210,69710,73055,75965,79570,81535,83030,85300,90193,91250,93170,95105,96825,99170,102160,103970,105950,107370,110250,111500,112880,114275,116346,116540,118490,119810,123163,125360,127945,129180,131450,134000,135530,137930,140103,142250,143420,144780,145020,147255,149090,151220,155150,157200,158030,159800,161645,163520,165790,168110,170150,171350,172855,174730,179265,181495,183226,185210,186020,188010,190520,192140,194836,196230,196460,198800,201040,202310,205670,209581,211400,214170,216545,219911,221598,223805,225650,227680,231215,232580,234520,237595,239875,241550,244430,246325,248020,249714,251970,253760,255605,257840,260235,261950,264650,265985,267250,269030,270860,273340,276500,278300,280850,282445,284683,287510,290347,291800,293270,295250,297134,299385,301519,303520,305000],"text":[">> All right. So, we've","been doing a lot of stuff of vertices and edges.","And we take them,","we enumerate them, doing all the crud stuff.","But now I actually want to get into the beat of this,","I want to traverse a graph.","I actually want to discern","some information from all","these entities we've been building.","So, let's walk through that,","let's walk through how you can take a graph,","traverse it and get some knowledge from","all these different lines and notes?",">> You got it. So, let's go right into it.","So, the example that we have here on the screen here,","is a standard graph query,","Gremlin query, in which I'm looking at Thomas,","the vertex Thomas and I'm going to go out","and figure out who's connected to Thomas.","Okay. So let's break down this query here.","Okay. So first we start with the vertex Thomas.","And so you notice the blue arrow is pointing to","both the query itself","and also the know that we're","starting off, which is Thomas.","Okay. Now, the next part of the query says outE,","which is the out edge.","And that edge we're going to go out","from the Thomas vertex","and we're going to go ahead","specifically on the edges that are say know.","In other words, you have knowledge of somebody.","We label the edge as a know.","Okay. So in this case,","as you notice from the yellow arrows,","there are two know edges.","Okay. From Thomas to Robin and Thomas to Mary Kay.","Okay. So that's what's next.","And then, the next part of this","in lighter yellow, is in vertex.","In other words, now that I've went outward from the edge,","I'm going to go look for","the next vertex that's connected to it.","So, in this case the two vertices","are both Robin and Mary Kay.","Perfect. And finally, give me the value.","So that's a property within the graph.","Okay. And the properties first name in","this case it matches what we're seeing here.","It's both Robin and Mary Kay.","So that's the breakdown of this particular query.",">> So, in this example, it seems like","you're using the same value for","both the ID property","and the first name property for simplicity.",">> Yes.",">> But those are discrete properties","that we can name them different things.","Maybe if I want to use a GUID as ID,","then maybe a string,","a more descriptive string for the first name property,","I can definitely do that?",">> Absolutely. In fact it is common to go ahead","and use a GUID for the ID,","so that way you can actually hash","your way out of really complicated problems.","But for the sake of this demo,","we've went ahead and made sure it's actually","put in the first name so it makes","a lot easier for you to read.",">> Wonderful.",">> So exactly to your point, just to add to it.","Yes, typically, the first name,","last name and other attributes like that,","are the properties in your graph as opposed to the ID,","which typically often is a GUID actually.",">> Okay wonderful.",">> So let's go to a slightly more","complicated query which is even funkier.","So in this case, I don't actually","don't know which vertex I'm starting off with.","This is g.V, has label, person.","So that means any vertices that","has a label of person,","and also has a first name of Thomas.","So it does point to the Thomas vertex,","but if there were multiple Thomases inside this graph,","then I would actually be starting from multiple vertices.",">> Okay, so this get all vertices","that match. It's almost a filter.",">> Correct.",">> And then, so it will return a set of","vertices that matches that filter criteria?",">> That's correct. So in other words, if I had","six vertices which have Thomas in it,","that's exactly actually how it start.",">> Okay.",">> I would have to start with six different vertices.","And then, we go ahead and say outE no,","Which is the next line.","So that means, we're talking about all the edges that","are leaving Thomas or the Thomases,","in this case, in your example, excuse me,","then to the next set of vertex.","In this case, the Thomas and","vertex has out edges of using knows,","of the property, sorry,","knows label to Robin and Mary Kay.","Okay, perfect. Then we go to the","in vertex, has label person.","So the two vertices that are labeled as people,","are Robin and Mary Kay.","So we agree to that, so we're good to go.","But, we have another out.","Okay. So now we're going to go out one more time,","we're making a traversal.","And so in this case, there's actually only one more edge.","This is from Robin to Ben.","Okay. So, we're going to go ahead","and using the outE knows,","we're going to traverse that a get again.","Basically to the in vertex,","the label person and the first name.","And in this case the answer is Ben.",">> So we're looking essentially for people who are named","Thomas and they're friends of","friends and they get the first name of those people.",">> Exactly. And so,","this is how you actually","typically would run your graph queries,","because they're not actually that easy to","run in relational database type queries.","This is the power of graph queries and the ability to","traverse your graphs is actually","the real awesome power of Graph.",">> Yeah, I can definitely see using,","if this is a funky query, I'd say bring on the phone ,","I can see it how","you can use this to do some type of big traversals,","union different sets together and be","able to like maybe provide","recommendations or provide relationships","or logistics in areas.","When we talked about Graph API scenarios,","I can see how you could a lot of scenarios in,","again using these type of traversals.",">> Exactly."]}