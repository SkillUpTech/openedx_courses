{"start":[0,2800,4135,6713,8403,10484,12430,15245,18070,21100,23720,26050,27400,29380,31095,33380,35080,39210,41020,42545,45430,47770,49900,52060,54360,55450,57385,59695,64492,66216,68710,72030,73960,76630,78340,80890,83280,86175,89210,92700,94902,97200,98980,102480,103950,107355,109590,112175,113835,116610,118710,121155,122505,124110,127155,129600,132780,134040,137095,138575,141630,145515,147420,149635,150840,151890,155100,160145,166064,168663,170545,173125,175759,176770,178210,181210,182710,185920,187450,189440,191350,192820,194485,196845,199210,201730,203200,208720,211060,213220,216155,218486,219950,221475,223495,226630,228730,231070,233555,235755,237865,239290,241135,243910,245740,247910,249310,251700,253270,255750,258430,259780,264985,266280,269500,274605,278200,281150,283330,286618,288460,290460,292525,295075,298030,301990,303865,306910,310695,313140,315663,317290,320860,322810,325450,327520,331675,335200,337285,338875,340090,341470,343715,345890,347710,350250,354250,355675,357455,358890,361165,363640,365500,367435,368490,371005,373000,375225,376570,379635,382840,384400,386110,387940,390000,392845,394300,396425,398050,399205,402710,404365,406338,408460,409780,410860,413140,414820,416550,418900,421735,428120,431350,434480,438360,439735,441925,445015,447400,451070,452440,453960,455200,457900,460090,462460,465695,468700,470200,471970,474610,477320,478800,482230,484270,487030,488110,493455,494650,499450,501815,504460,505950,509590,519155,523240,526060,528520,531010,532090,534640,536860,539770,542860,545710,548650,551632,553935,555640,557830,559390,562460,564880,567050,570730,572965,574970,577565,580405,584785,586630,589735,591640,593620,595675,598380,601540,604450,606430,609820,610990,612580,614590,617825,619660,622000,623950,625600],"end":[2800,4135,6713,8403,10484,12430,15245,18070,21100,23720,26050,27400,29380,31095,33380,35080,39210,41020,42545,45430,47770,49900,52060,54360,55450,57385,59695,64492,66216,68710,72030,73960,76630,78340,80890,83280,86175,89210,92700,94902,97200,98980,102480,103950,107355,109590,112175,113835,116610,118710,121155,122505,124110,127155,129600,132780,134040,137095,138575,141630,145515,147420,149635,150840,151890,155100,160145,166064,168663,170545,173125,175759,176770,178210,181210,182710,185920,187450,189440,191350,192820,194485,196845,199210,201730,203200,208720,211060,213220,216155,218486,219950,221475,223495,226630,228730,231070,233555,235755,237865,239290,241135,243910,245740,247910,249310,251700,253270,255750,258430,259780,264985,266280,269500,274605,278200,281150,283330,286618,288460,290460,292525,295075,298030,301990,303865,306910,310695,313140,315663,317290,320860,322810,325450,327520,331675,335200,337285,338875,340090,341470,343715,345890,347710,350250,354250,355675,357455,358890,361165,363640,365500,367435,368490,371005,373000,375225,376570,379635,382840,384400,386110,387940,390000,392845,394300,396425,398050,399205,402710,404365,406338,408460,409780,410860,413140,414820,416550,418900,421735,428120,431350,434480,438360,439735,441925,445015,447400,451070,452440,453960,455200,457900,460090,462460,465695,468700,470200,471970,474610,477320,478800,482230,484270,487030,488110,493455,494650,499450,501815,504460,505950,509590,519155,523240,526060,528520,531010,532090,534640,536860,539770,542860,545710,548650,551632,553935,555640,557830,559390,562460,564880,567050,570730,572965,574970,577565,580405,584785,586630,589735,591640,593620,595675,598380,601540,604450,606430,609820,610990,612580,614590,617825,619660,622000,623950,625600,628460],"text":[">> So we learned that Azure Cosmos DB handles","our partitions for us.","But as somebody using this database,","what would I have to think about or concern myself","with as far as partitions?","Do I need to do something myself to make","this partition design ideal?","Do I need to plan or do I just kind of forget","about it completely and just let it magically happen?",">> So you touched on a very good subject here, Sidney.","And if there's one thing that you really,","really put a lot of thought","before you start getting hands on and writing","some code is designing","the partition strategy for your application.","And this is going to be heavily based off of","the workload itself and you want to think about,","what are the access patterns","to my database? Is it write-heavy?","Is it read-heavy? For reads,","what are the query patterns?","But before we jump into that, I mean,","it'll be good also to get some context in terms","of what does this is all look like underneath the hood?",">> All right.",">> So when you provision a container,","let's say this is my container.","And a container can be something like a collection,","if you're using the Document DB API,","it can be a graph if you're using the Gremlin API,","it can be a table if you're using the Tables API.","But these are all just different names","for what essentially is just a container.","On a container, you're going to have","this thing called, a partition key.","And on the partition key,","this is a hint to the database to say, hey,","this is how I want my data to be distributed.","So what will happen under the hood","is it'll hash this partition key","and break this into a number of ranges.","And then use that to map them to","the actual physical partitions underneath the hood.","The key thing to remember is this","is a logical abstraction.","The partition keys are not a one to","one mapping with the physical partitions.","And so for a partition key,","you actually want to aim for something that has very,","very hard cardinality and that's","just a fancy way of saying you want many, many values.","If you can come up with something with","thousands of values or millions","of values that- A is okay and B,","that's actually a good thing to do because what ends up","happening is the more partition key values you have,","the more you can scale out.","And what we do is because- the other thing to think about","partition key is we","co-locate all data belonging to a single partition key,","under a single physical partition underneath the hood.","The more partition key values you have,","the more underlying partitions you have.","So let's use an example,","let's say we're building","an IoT scenario and","the partition key is set to something like a device ID.","So underneath this, when we hash the partition key,","so think of a hash here.","What this will give is","a kind of a nice pseudo-random distribution","over a large amount of hashed values.","That way, if you have","a bunch of device IDs starting from zero,","zero, zero, zero, zero, one, two, three,","four rather than having","everything kind of start on one end of the spectrum,","the hash will give you kind of a","nice pseudo-random even spread.","Off of this spread,","what we'll have is,","on the underlying system,","a number of physical partitions.","And so you can have any number of","physical partitions underneath and this is going","to be heavily dictated","by the storage and throughput requirements.",">> So you're talking about the hashing","and the random distribution.","I remember with some other sharded stores in the past,","I had to do things like distribute my workload.","So back in the day when I","used to use things like BLOB tables,","it was actually storage tables.","I used to have to, if I had things in ordinal order,","I didn't want to upload them in ordinal order because","then we would be throttled.","Because I'm hitting the same partition too much.","I had to actually mainly go and distribute it,","so you're saying with the way you hash","everything this is done for","you essentially underneath the hood?",">> So the key thing to make sure you get it right is that","your workload is distributed","across a large number of partition keys.","As long as your workload is","distributed across a large number of partition keys,","we take care of the rest in terms of","distribution on the underlying partitions.","And so, once we hash this partition key,","what we do is we actually split","the hash values into what we call hash ranges.","And the hash ranges are,","you can think of this as you know values like 1 to","1000 might be stored and mapped to this partition.","The hashed values 1001 to 2000","might be here and so forth.","And what happens is this actually gives us","a nice means for actually continuing to scale out,","so we start with a set number","of partitions based off of storage and throughput.","And this is our means for actually","really giving you a low total cost of ownership","rather than having to set up a large number of","partitions upfront and having to pay for that right away.","The database can actually seamlessly grow","as your data volume grows and so let's say,","tomorrow this particular partition starts getting full.","Let's say, it's- it crosses some threshold","or maybe it's filling up,","what we can do is we can actually split","this range and split this underlying partition,","so that now you have more partitions","to handle even a larger data set.","And because we're doing a split","on a hash range this actually gives us","a means for not having to rebalance data and","take it from every single partition","in the system already.","And so what we can do is we can","actually do online splits,","meaning you never take your application online,","you don't actually sacrifice availability.","Well what happens underneath the scenes","is Cosmos DB are automatically seamlessly","grow and you effectively","now have just unlimited storage","as much as Azure can provide you.",">> So this sounds really exciting,","you have a dynamic split merge capability","and it's not like other sharding or","partitioning schemes where we have to implement","our own sharding or partition manager,","and manage all of this.","This is managed for you.","One last question, do you have","any visibility into what your partitioner ranges are,","or is it something","where you kind of have to guess or hope?",">> So we actually expose a number of metrics for you in","the Azure portal and","that's actually a very good thing to look at.","Because what we do is actually tell you,","how hot has a partition","gotten with respect to a throughput.","And what you want to do is you want","to avoid hot partitions.","We also gave you kind of a nice chart","to show you the spread","of storage on each of the underlying partitions,","so that's also another means for","getting an idea of hot partitions.","That actually is a good segway to start","thinking about what are the things","you want to think about like,","how do I actually designed my application, right?","So the first thing you want to do is","think about the actual scenario.","The data access patterns and what","you want to think about more first is","read versus- write versus read throughput or volume.","And the reason why I say this is, these two things,","these two concepts might actually steer you in","to two very different extremes.","So if you have a write heavy workload,","those are the easiest to load balance.","What ends up happening is as long as at any given time,","the right workload what you want to do is","distribute that to as many partition keys as possible.","You only have to worry about distributing","the overall requests volume because","a write request is always going to","be individual records coming into the system.","And an example of a good partition key,","might be something like a device ID or as","an example of a poor partition key is current time.","If I use current time then at any given moment,","all of the writes per","second coming into the database have","the exact same partition key value and so you'll actually","get a bottleneck on a single physical partition,","you want to avoid that.","Now for reads, reads are going to be a little bit more","interesting because what you have here is","queries and what you'll actually want","to do is you want to look at","only the top three queries for a read-heavy workload.","And the reason why that is,","is let's say we partitioned off of device ID.","If I now have let's say a client here,","this is in my SDK.","If I now write a query,","let's use the document DB SQL syntax.","If we actually detect","that the partition key is in the query,","what this allows us to do is directly route that request","to the underlying physical partition","without touching any of the other partitions.","However, if you were to write","a query that does not have the partition key","represented then the SDK actually doesn't know","which physical partition to route the request to and so,","it does- what is called a, Fan Out.","And the Fan Out is basically in parallel,","talk to every single one of these partitions because it's","heavily parallelized the hit on latency is minimal,","however, the hit on throughput is very real.","You're actually using throughput budget","on each of these underlying partitions","whether they're actually relevant or","not for the underlying data set.","Anyhow, coming back to this,","you now have two objectives.","One is distribute the overall workload across as","many physical partitions or","rather partition keys as possible.","And number two you want to make sure that for","any kind of heavily queried system,","you want to make sure that you avoid blindly fanning out.","And based off of this,","operate off our Pareto principle, the 80/20 rule.","What you don't want to do is","focus so much on something that let's say","just a few queries when","really you're dealing with a massive write volume.","Optimized for the 80% case and then it's","okay if that 20% case is a little less than optimal,","what you don't want to do is optimize for the 20%","at the detriment of the bulk of the workload.",">> And I tell you, this is","really interesting topic and we're going to","definitely talk about this more in the course,","especially for the read-heavy workloads,","how do you analyze those queries and","what type of queries will cause that fan out","versus the type of queries that go directly to","the appropriate partition and maybe how","you change your application to accommodate for that."]}