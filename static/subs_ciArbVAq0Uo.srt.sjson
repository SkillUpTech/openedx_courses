{"start":[1480,6085,8230,9350,11120,12860,14595,17120,19305,20630,22730,27610,29000,30110,32390,34565,38570,42435,45560,47405,51950,54170,56895,59315,62555,64370,66665,68180,70145,71450,73880,76250,78710,81805,84980,87060,88178,91200,92810,95675,97250,99800,102890,105050,107305,109725,111285,113510,117190,119135,121730,125300,126980,128827,130695,133070,134675,138260,139430,141005,144320,147425,150010,152210,154575,156705,157935,160880,162440,164000,166305,170265,174445,178105,179240,181385,185380,189675,197710,200730,204440,206430,207810,211450,215935,221225,224110,230715,237695,241770,244840,247335,251565,253130,254010,255420,258720,264711,268960,271690,273240,275050,277450,280846,283235,284350,285715,288190,291780,293110,297290,299545,303730,305897,310234,314050,315760,318100,320020,322385,325220,328995,332230,335005,342520,349075,352030,355350,358810,360610,362955,365065,368380,371110,373340,378295,381295,384820,386680,388743,390010,391765,393065,394285,397912,401528,403190,405470,407720,408950,410735,412645,414260,416615,418460,420875,424220,425300,427790,429290,431770,433460,435215,437765,439885,441570,443480,445830,450140,454170,456580,459230,462010,463520,465110,466380,467160,468875,470815,473090,476165,478575,481700,483710,486140,488420,491170,493385,495656,498350,501140,502790,505060,506360,508340,512155,513800,515630,519920,521450,522860,523910,525170,529785,531830,534260,536155,537785,539495,543770,545315,547790,550160,551690,553990],"end":[6085,8230,9350,11120,12860,14595,17120,19305,20630,22730,27610,29000,30110,32390,34565,38570,42435,45560,47405,51950,54170,56895,59315,62555,64370,66665,68180,70145,71450,73880,76250,78710,81805,84980,87060,88178,91200,92810,95675,97250,99800,102890,105050,107305,109725,111285,113510,117190,119135,121730,125300,126980,128827,130695,133070,134675,138260,139430,141005,144320,147425,150010,152210,154575,156705,157935,160880,162440,164000,166305,170265,174445,178105,179240,181385,185380,189675,197710,200730,204440,206430,207810,211450,215935,221225,224110,230715,237695,241770,244840,247335,251565,253130,254010,255420,258720,264711,268960,271690,273240,275050,277450,280846,283235,284350,285715,288190,291780,293110,297290,299545,303730,305897,310234,314050,315760,318100,320020,322385,325220,328995,332230,335005,342520,349075,352030,355350,358810,360610,362955,365065,368380,371110,373340,378295,381295,384820,386680,388743,390010,391765,393065,394285,397912,401528,403190,405470,407720,408950,410735,412645,414260,416615,418460,420875,424220,425300,427790,429290,431770,433460,435215,437765,439885,441570,443480,445830,450140,454170,456580,459230,462010,463520,465110,466380,467160,468875,470815,473090,476165,478575,481700,483710,486140,488420,491170,493385,495656,498350,501140,502790,505060,506360,508340,512155,513800,515630,519920,521450,522860,523910,525170,529785,531830,534260,536155,537785,539495,543770,545315,547790,550160,551690,553990,555900],"text":[">> So Andrew, I have a database using Document DB API,","and I'm getting ready to put my application on there,","and I'm trying to figure out how shall I","model my data to take","advantage of some of the capabilities","of that document DB API,","and the document based modeling","that's available in Cosmo's DB.","So do you mind showing me some of","the ways I can model data and","how that can affect my application.",">> Yeah. The very first thing that I","really want to stress","when you think about","data modeling in a system like","Cosmos DB and the Document DB API is,","do not focus too hard on entities.","So over the past couple of decades","of using relational databases,","what we do is we're really taught to normalize and","think about entities and we might even build","what's called an entity relationship diagram.","And so if you imagine like let's say,","I have a record that represents an automobile.","What I'll do is I'll shred this into something","like you know a tire,","a table, an engine table,","a table body table,","all these different tables.","And then every time that I write something I shred","it up into many many entities and","then every time I query it back I have to combine all of","these entities and reproduce","the materialized you know query results.","In a system like Cosmos DB,","you're actually taught","generally speaking to de-normalize.","And what I mean by","de-normalizing is the records coming in,","just keep them as they are and","the records coming out, keep them as they are.","So really maybe another different way","of thinking about how you approach data modeling.","Keep in mind that this is not a hard science,","and there are no exact rules.","This becomes very subjective,","but at a high level your objective is","to optimize your data model for your workload.","So rather than thinking about entities first,","you're actually going to think about your workload first.","And the other context that's","really helpful to think about","when you're thinking about Cosmos DB is,","this is a distributed database.","It's not a single machine database","like a relational database.","And what we want to do is we want to avoid joints.","So if I were to start with something","like a collection here,","one thing to highlight is collections are not tables,","in fact collections do not enforce schema.","And it's actually perfectly okay","to co-locate different let's","say entities within the same collection.","And there's many benefits for doing so.","So in the absence of joints,","let's say I wanted to query some records.","Let's say I have,","just for sake of example,","a human record and a pet record,","and for the human record I might have like a human ID.","Let's say that's Andrew, and the type of this","is going to be human.","And he's going to have a set of","human attributes, things like you know.","Hey Andrew works for Microsoft.","I might also have a pet record.","And so let's say I have my pet ID is my cat Gracie.","Gracie belongs to a human.","And so you also have a human ID that she refers to.","Rather than doing a foreign key and doing a joint.","What I'm going to do is I'm going to just place","the human ID in here, in this record.","I'm going to put a type equals cat and","she might have her own set of pet related attributes.","For example, she might have something like","favorite litter type or flea medication.","This might be some kind of scented clay.","So over here now if I put","both of these different types within the same collection,","one of the neat things here I can do is from","Cosmos DB and the document DB API's point of view.","It just treats these as JSON,","it doesn't actually understand","that these are different types.","And so if you were to do a query let's say where","the human ID is Andrew.","It's going to find that this predicate is","actually matching on both of these different types of","documents and they're actually going","to come back in a single query request.","So this is actually one mechanism for how do you","actually bring some sanity in the absence of joints?","How do you actually get around this joint problem?","The other thing you can do here","is let's say you only want","human records because you","can add properties on a record level.","One of the best practices might","be to annotate the type of the record.","And so this way you can actually even say like","type in human to only retrieve human records,","or you can do type in human,","cat to get only human and cat records","as you start combining things into the same collection.","The other way to view this problem","is what properties now do","you de-normalize and like right now for","this example I've still kind of broken things by entity,","but that's not always what you want to do.","And I kind of alluded this with the car example,","but because we're dealing with JSON.","JSON actually has a pretty interesting type system.","JSON supports not just strings and numerics,","it actually supports things like objects and arrays.","Also it supports a variety of other things including","like billings, nodes etcetera.","But the fact that you can embed objects or arrays,","and these arrays can even be like arrays","of objects that have arrays inside them.","You can get very complex with the data model,","and as a result you can start now embedding a lot of","this information within a single property","or a single document.","Now, another trick to think about is,","how do you want to co-locate","properties within certain documents?","One way of doing this is sharing","properties based off of entities.","But another way to think about","this is follow your workload,","and what you're going to do is you're","going to look at things like you know","what are the right patterns,","what are the read patterns?","And generally speaking when","you split things up into multiple records,","what you're doing is you're really optimizing for rights","because when you split them up","for especially things like updates.","If I have an update heavy system,","I might actually want to update","a single record as opposed to if I embed into","many many records I'm not going","to have to fan out that update.","In contrast, if I have a read heavy system,","if I split things into","many many small records it's quite possible that I","might have to do a follow up request","to resolve that relationship.","And if I were to have to do that,","then it might be cheaper for me to","share and embed a shared set of properties,","and so that's optimizing for reads here.",">> So for example you shared up top.","Let's say you had a read heavy workload","and we're constantly pulling in,","90% of our queries are getting a human and all of","the cats that the human has at their home.","Are we talking about a scenario where","maybe we have the human JSON object and","a cat array whereas if it's maybe","right only you're talking","about maybe splitting it into separate entities,","so you're writing less?",">> That's correct.",">> Okay. It's almost like","implementing your own patch system really.",">> Yeah yeah. And really what you want to do","is follow the 80:20 rule here.","It's Okay, if let's say updates are expensive,","if you get thousands of reads for every update.","Likewise if you get thousands of","updates for every single read then you might really","want to optimize around the updates instead and","just pay the costs on the right path.","But basically really understand","what your workload pattern is,","optimize around that you can take hybrid approaches.","And another way of breaking up and segmenting","the data is actually thinking about","how frequently certain properties mutate.","So if you have properties that","mutate quite often and you combine them","with a bunch of properties that are fairly immutable,","if you have an update heavy scenario,","you're actually paying the cost of","now throwing this huge document","where only a small percentage","of the properties are updating.","So rather than doing that you","might actually even chunk things out","by if they mutate often versus do not mutate often.","So the thing is to keep an eye out here are","things like updates and for reads,","really think about your queries.","And these all have a big influence on","how you design your data model","and basically fit your data model against these patterns.",">> So yes, sounds like","really understanding your write and read patterns,","your updates and queries will help you decide what","the appropriate model is for","your data and your Cosmos DB database.",">> Yes."]}